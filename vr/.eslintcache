[{"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\App.js":"1","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\Routers\\index.js":"2","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\Routers\\routeMap.js":"3","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\index.js":"4","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\index.js":"5","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reducers\\index.js":"6","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reducers\\config.js":"7","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\Perviews\\index.js":"8","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reportWebVitals.js":"9","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\Edit\\index.js":"10","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\reducers.js":"11","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Demo\\index.js":"12","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reducers\\rootReducer.js":"13","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\reselect.js":"14"},{"size":326,"mtime":1610694468207,"results":"15","hashOfConfig":"16"},{"size":873,"mtime":1610436319529,"results":"17","hashOfConfig":"16"},{"size":335,"mtime":1610435844175,"results":"18","hashOfConfig":"16"},{"size":1120,"mtime":1610614303458,"results":"19","hashOfConfig":"16"},{"size":619,"mtime":1610521381580,"results":"20","hashOfConfig":"16"},{"size":1842,"mtime":1610518898852,"results":"21","hashOfConfig":"16"},{"size":498,"mtime":1610518911726,"results":"22","hashOfConfig":"16"},{"size":15336,"mtime":1610692907974,"results":"23","hashOfConfig":"16"},{"size":362,"mtime":1609224057157,"results":"24","hashOfConfig":"16"},{"size":653,"mtime":1610623808725,"results":"25","hashOfConfig":"16"},{"size":534,"mtime":1610623674523,"results":"26","hashOfConfig":"16"},{"size":2686,"mtime":1610937011953,"results":"27","hashOfConfig":"16"},{"size":367,"mtime":1610518898811,"results":"28","hashOfConfig":"16"},{"size":416,"mtime":1610613609161,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"adzifw",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\App.js",["64"],"import './App.css';\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport VrRouters from './views/Routers/index';\n\nimport DemoBox from './views/VrViews/Demo/index'\nfunction App() {\n  return (\n    <HashRouter>\n      {/* <VrRouters /> */}\n    <DemoBox/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n",["65","66"],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\Routers\\index.js",[],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\Routers\\routeMap.js",[],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\index.js",["67"],"import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Preview from './Perviews/index'\r\nimport Edit  from './Edit/index'\r\nimport { Button } from 'antd';\r\nimport reducer from './reducers.js';\r\nimport { injectReducer } from 'reducers';\r\n\r\ninjectReducer('vrData',reducer)\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Contenet = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  flex: 0 0 248px;\r\n  width: 248px;\r\n\r\n  .ant-tabs {\r\n    overflow: initial !important;\r\n  }\r\n`;\r\n\r\nconst PreviewWrap = styled.div`\r\n  flex: 1;\r\n  width: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Design = () => {\r\n  return (\r\n    <Container>\r\n      <Button type=\"primary\">Button</Button>\r\n      {/* <Header /> */}\r\n      <Contenet>\r\n        <SidebarWrap>\r\n          <Edit/>\r\n        </SidebarWrap>\r\n        <PreviewWrap>\r\n          <Preview />\r\n        </PreviewWrap>\r\n      </Contenet>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Design","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\index.js",[],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reducers\\index.js",["68"],"/**\r\n * create store\r\n */\r\nimport { configureStore, combineReducers, Reducer } from '@reduxjs/toolkit';\r\n// import { ThunkAction } from 'redux-thunk';\r\nimport rootReducer, { staticReducers } from './rootReducer';\r\n\r\n// store conf\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n/**\r\n * @param 一些说明：\r\n * 1.  当前的项目架构使用的是单个 store + 初始化时会生成的 rootReducer(这个reducer里只有公用的reducer)\r\n * 1.1 如果需要使用 - 路由懒加载代码分割 - 的模式，那么会导致动态加载的业务模块对应的 reducer 不存在，所以会需要将当前 store 进行合并且重新注入，让业务模块的reducer 可以存在\r\n *\r\n * 2.  还有一种设计模式可以参考：项目中分为多个 store , webpack 的 entry 是动态的, 在 build 时使用 npm run build --moduleName\r\n * 2.1 那么此时每个业务模块的 rootReducer 也就是被 Provider 提供的 store 始终都是会包含当前业务模块的 reducer ，就不会出现以上第一种的情况，也就不需要这个 injectReducer 这个操作\r\n *\r\n * - 不倾向某一种 redux 的设计，按照业务来决定即可\r\n *\r\n */\r\nconst asyncReducers = {};\r\nexport function injectReducer(key, reducer) {\r\n  asyncReducers[key] = reducer;\r\n  const newRootReducer = combineReducers({\r\n    ...staticReducers,\r\n    ...asyncReducers,\r\n  });\r\n  store.replaceReducer(newRootReducer);\r\n}\r\n\r\n// 普通 dispatch\r\n// export type AppDispatch = typeof store.dispatch;\r\n\r\n// 每当我们需要访问 Redux 存储状态时（mapState 函数 | useSelector 选择器）\r\n// export type RootState = ReturnType<typeof rootReducer>;\r\n\r\n// thunk type\r\n// export type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\r\n\r\nexport default store;\r\n","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reducers\\config.js",[],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\Perviews\\index.js",["69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useMemo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as THREE from 'three';\r\nimport {\r\n  selectVrData,\r\n} from '../reselect'\r\n\r\nimport {\r\n  selectIsHotspot,\r\n} from '../reselect'\r\nimport { actions } from '../reducers'\r\n\r\nimport { Button } from 'antd';\r\n\r\nimport fore from 'static/images/4.jpg'\r\nimport hotspot from 'static/images/hotspot.jpg'\r\nimport './index.css'\r\n\r\n\r\nlet xPositionArr = [];\r\nlet yPositionArr = [];\r\nlet zPositionArr = [];\r\n\r\nconst forType = 'Equirectangular'\r\nlet scene = new THREE.Scene();\r\n//  1、 透视相机                        可查看视野角度            长宽比                     近截面 和远截面\r\nlet camera = new THREE.PerspectiveCamera(75, (window.innerWidth) / (window.innerHeight), 1, 1500);\r\n/**\r\n  *  透视相机四个参数 ：视野角度 \r\n  *      长宽比\r\n  *      近截面\r\n  *      远截面\r\n**/\r\n\r\n\r\nlet container = document.getElementById(\"container\")\r\nlet mesh;\r\nlet arr = [];\r\nlet renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  \r\n // 用户交互\r\n let isUserInteracting = false\r\n//  const [isUserInteracting, setIsUserInteracting] = useState(false);\r\n // 点击X 轴坐标\r\n let onPointerDownPointerX = 0\r\n//  const [onPointerDownPointerX, setOnPointerDownPointerX] = useState(0);\r\n // 点击X 轴坐标\r\n let onPointerDownPointerY = 0 \r\n// const [onPointerDownPointerY, setOnPointerDownPointerY] = useState(0);\r\nlet lon = 0 \r\nlet lat = 0 \r\n  // const [lon, setLon] = useState(0);\r\n  // const [lat, setLat] = useState(0);\r\nlet phi = 0;\r\nlet theta = 0;\r\n\r\nlet onPointerDownLon = lon\r\nlet onPointerDownLat = lat\r\n  // const [onPointerDownLon, setOnPointerDownLon] = useState(lon);\r\n  // const [onPointerDownLat, setOnPointerDownLat] = useState(lat);\r\n\r\n  let isTag = false\r\n\r\nconst Preview = () => {\r\n  \r\n  const dispatch = useDispatch() \r\n  const vrData = useSelector(selectVrData())\r\n  const isHotspot = useSelector(selectIsHotspot()) // 是否投放跳转点\r\n  console.log(isHotspot,'---首次改变',isHotspot)\r\n\r\n  const [width, setWidth] = useState();\r\n  const [height, setHeight] = useState();\r\n  const [startV, setStartV] = useState();\r\n  \r\n \r\n\r\n  // const [onPointerDownLon, setOnPointerDownLon] = useState(lon);\r\n  // const [onPointerDownLat, setOnPointerDownLat] = useState(lat);\r\n\r\n  useEffect(() => {\r\n    \r\n    init([fore])\r\n    animate()\r\n  }, [])\r\n  \r\n\r\n  //  初始化\r\n  const init = (imgurl) => {\r\n    let width = document.getElementById('container').getBoundingClientRect().width\r\n    let height = document.getElementById('container').getBoundingClientRect().height\r\n    if (imgurl.length > 1) {\r\n      alert(\r\n        \"抱歉，一张图请选择panorama1，六张图请选择panorama6且只支持cubeFaces\"\r\n      );\r\n      return;\r\n    }\r\n   \r\n    camera.target = new THREE.Vector3(0, 0, 0);\r\n    camera.position.set(10,0,0)\r\n    const geometry = new THREE.SphereGeometry(500, 60, 40);\r\n    geometry.scale(-1, 1, 1);\r\n  \r\n\r\n    //防止跨域用canvas作为纹理\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.style.backgroundColor = \"rgba(255,255,255,0)\";\r\n    let context = canvas.getContext(\"2d\");\r\n    let img = new Image();\r\n    img.src = fore;\r\n    img.onload = function () {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      context.drawImage(img, 0, 0, width, height);\r\n      // let texture = new THREE.Texture();\r\n      // texture.image = canvas;\r\n      // texture.needsUpdate = true;//开启纹理更新\r\n      // texture.minFilter = THREE.LinearFilter;//minFilter属性：指定纹理如何缩小\r\n      let demo = new THREE.TextureLoader().load(fore)\r\n      let material = new THREE.MeshBasicMaterial({\r\n        map: demo, // 此处使用 demo 的参数 图片更为清晰\r\n        transparent: false\r\n      });\r\n      mesh = new THREE.Mesh(geometry, material);\r\n      scene.add(mesh);\r\n    };\r\n\r\n    //画已经保存的热点\r\n    // this.drawJumpHotSpots(this.drawedHotspots,\"static/images/hotspot.jpg\");\r\n    //画已经保存的图片热点\r\n    // this.drawImageHotSpots(this.drawedImgHotSpots);\r\n\r\n    //判断xml字符串中的场景与目前所在场景相同的是哪一个\r\n    // let count = -1;\r\n    // let state = this.$store.state.test;\r\n    // for (let i = 0; i <arr.length; i++) {\r\n    //   if(arr[i].fileArr[0].fileUrl===state.imgFile.fileUrl[0]){\r\n    //     count = i;\r\n    //   }\r\n    // }\r\n\r\n    // if(count !== -1){\r\n    //   //把相同场景中的热点信息commit给state\r\n    //   let  len = arr[count].hotspot.length;\r\n\r\n    //   for (let j = 0; j <len ; j++) {\r\n    //     let obj={};\r\n    //     obj.hotTarget=arr[count].hotspot[j].url.replace(\"{\",\"\").replace(\"}\",\"\").replace('node', \"场景\");\r\n    //     obj.hotIntroduction=arr[count].hotspot[j].title.replace(\"{\",\"\").replace(\"}\",\"\");\r\n    //     obj.position=arr[count].hotspot[j].position;\r\n    //     obj.panAndTilt=arr[count].hotspot[j].panAndTilt;\r\n    //     state.jumpHotSpots.push(obj);\r\n    //   }\r\n    //   let len2 = arr[count].polyhotspot.imageHotSpots.length;\r\n    //   let len3 = arr[count].polyhotspot.urlHotSpots.length;\r\n    //   for (let j = 0; j < len3; j++) {\r\n    //     let obj={};\r\n    //     let reg2 = /([^/]+)$/;\r\n    //     obj.hotUrl=arr[count].polyhotspot.urlHotSpots[j].url.match(reg2)[1];\r\n    //     obj.position=arr[count].polyhotspot.urlHotSpots[j].position;\r\n    //     obj.panAndTilt=arr[count].polyhotspot.urlHotSpots[j].panAndTilt;\r\n    //     state.urlHotSpots.push(obj);\r\n    //   }\r\n    //   for (let j = 0; j < len2; j++) {\r\n    //     let obj={};\r\n    //     let reg2 = /([^/]+)$/;\r\n    //     obj.hotImage=arr[count].polyhotspot.imageHotSpots[j].target.match(reg2)[1];\r\n    //     obj.position=arr[count].polyhotspot.imageHotSpots[j].position;\r\n    //     obj.panAndTilt=arr[count].polyhotspot.imageHotSpots[j].panAndTilt;\r\n    //     state.imageHotSpots.push(obj);\r\n    //   }\r\n\r\n      //当xml字符串中有场景则把场景中的热点信息进行绘制，必须判断xml字符串中的场景与目前所在场景相同才绘制热点\r\n      //绘制xml字符串中的跳转热点\r\n      // this.drawJumpHotSpots(arr[count].hotspot,\"static/images/hotspot.jpg\");\r\n      //绘制xml字符串中的图像热点\r\n      // this.drawImageHotSpots(arr[count].polyhotspot.imageHotSpots);\r\n      // this.drawImageHotSpots(arr[count].polyhotspot.urlHotSpots);\r\n    // }\r\n\r\n    // this.$store.commit('addArr', arr);\r\n    // renderer=new THREE.CanvasRenderer();\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    //确保区域大小\r\n    renderer.setSize(width, height);\r\n    container = document.getElementById(\"container\")\r\n    container.appendChild(renderer.domElement); \r\n\r\n    // 当鼠标指针移动到元素上方，并按下鼠标按键（左、右键均可）\r\n    document\r\n      .getElementsByTagName(\"canvas\")[0]\r\n      .addEventListener(\"mousedown\", onDocumentMouseDown, false);\r\n    document\r\n      .getElementsByTagName(\"canvas\")[0]\r\n      .addEventListener(\"mousemove\", onDocumentMouseMove, false);\r\n    document\r\n      .getElementsByTagName(\"canvas\")[0]\r\n      .addEventListener(\"mouseup\", onDocumentMouseUp, false);\r\n    // document\r\n    //   .getElementsByTagName(\"canvas\")[0]\r\n    //   .addEventListener(\"wheel\", this.onDocumentMouseWheel, false);//wheel鼠标滚轮\r\n\r\n    // document.getElementsByTagName(\"canvas\")[0].addEventListener(\r\n    //   \"dragover\",\r\n    //   event => {\r\n    //     event.preventDefault();\r\n    //     event.dataTransfer.dropEffect = \"copy\";\r\n    //   },\r\n    //   false\r\n    // );\r\n    // document.getElementsByTagName(\"canvas\")[0].addEventListener(\r\n    //   \"dragenter\",\r\n    //   () => {\r\n    //     document.body.style.opacity = 0.5;\r\n    //   },\r\n    //   false\r\n    // );\r\n    // document.getElementsByTagName(\"canvas\")[0].addEventListener(\r\n    //   \"dragleave\",\r\n    //   () => {\r\n    //     document.body.style.opacity = 1;\r\n    //   },\r\n    //   false\r\n    // );\r\n    // window.addEventListener(\"resize\", this.onWindowResize, false);\r\n  }\r\n\r\n  // 执行渲染\r\n  const update = () => {\r\n //控制自动旋转速度\r\n  if (isUserInteracting === false) {\r\n        lon += 0;\r\n      }\r\n      lat = Math.max(-85, Math.min(85, lat));\r\n      phi = THREE.Math.degToRad(90 - lat);\r\n      theta = THREE.Math.degToRad(lon);//degToRad()方法返回与参数degrees所表示的角度相等的弧度值\r\n      camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\r\n      camera.target.y = 500 * Math.cos(phi);\r\n      camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\r\n      camera.lookAt(camera.target);\r\n      renderer.render(scene, camera);\r\n  }\r\n\r\n  // 递归调用\r\n  const animate = () => {\r\n    update()\r\n    requestAnimationFrame(animate)\r\n  }\r\n\r\n  //绘制多个跳转热点\r\n  const  drawJumpHotSpots = (variable,newsrc) =>{\r\n    for (let i = 0, len = variable.length; i < len; i++) {\r\n      let position = variable[i].position;\r\n      let canvas = document.createElement(\"canvas\");\r\n      canvas.style.backgroundColor = \"rgba(255,255,255,0)\";\r\n      let context = canvas.getContext(\"2d\");\r\n      canvas.width = 128;\r\n      canvas.height = 128;\r\n      let img = new Image();\r\n      //这里发布的时候会出现http://localhost:8083/web/dist/static/images/hotspot.jpg\r\n      img.src = newsrc;\r\n      //publish\r\n      //img.src = 'textures/hotspot.jpg';\r\n      img.onload = function() {\r\n        context.drawImage(img, 0, 0);\r\n        let texture = new THREE.Texture(canvas);\r\n        texture.needsUpdate = true;\r\n        texture.minFilter = THREE.LinearFilter;\r\n        var spriteMaterial = new THREE.SpriteMaterial({\r\n          map: texture,\r\n          transparent: false\r\n        });\r\n        var sprite = new THREE.Sprite(spriteMaterial);\r\n        sprite.scale.set(30, 30, 30);\r\n        let rate = 0.8;\r\n        var endV = new THREE.Vector3(\r\n          position[0] * rate,\r\n          position[1] * rate,\r\n          position[2] * rate\r\n        );\r\n        sprite.position.copy(endV);\r\n        scene.add(sprite);\r\n      };\r\n    }\r\n  }\r\n  \r\n  const onDocumentMouseDown = (event) => {\r\n    isUserInteracting = true\r\n    //首先确保imgType是auto，否则添加点击事件\r\n    if (forType === \"Equirectangular\") {\r\n        event.preventDefault();\r\n        let vector = new THREE.Vector3(); //三维坐标对象\r\n        vector.set(\r\n          //注意：这里是根据render的size来确定的\r\n          ((event.clientX - 320) / (window.innerWidth - 340)) * 2 - 1,\r\n          -((event.clientY - 70) / (window.innerHeight - 90)) * 2 + 1,\r\n          0.5\r\n        );\r\n        vector.unproject(camera);\r\n        let raycaster = new THREE.Raycaster(\r\n          camera.position,\r\n          vector.sub(camera.position).normalize()//初始化\r\n        );\r\n        raycaster.camera=camera\r\n        let intersects = raycaster.intersectObjects(scene.children);\r\n      //如果绘制热点属于激活状态\r\n      if (isTag) {\r\n        console.log(isTag,'-----isHotspotisHotspot奇奇怪怪')\r\n        if (intersects.length > 0) {\r\n          var selected = intersects[0]; //取第一个物体\r\n          setStartV(selected.point)\r\n          xPositionArr.push(selected.point.x);\r\n          yPositionArr.push(selected.point.y);\r\n          zPositionArr.push(selected.point.z);\r\n        }\r\n        if (xPositionArr.length === 3) {\r\n          document.getElementById(\"container\").style.cursor = \"default\";\r\n          let xAverage =\r\n            (xPositionArr[0] + xPositionArr[1] + xPositionArr[2]) / 3;\r\n          let yAverage =\r\n            (yPositionArr[0] + yPositionArr[1] + yPositionArr[2]) / 3;\r\n          let zAverage =\r\n            (zPositionArr[0] + zPositionArr[1] + zPositionArr[2]) / 3;\r\n          \r\n          let canvas = document.createElement(\"canvas\");\r\n          canvas.style.backgroundColor = \"rgba(255,255,255,0)\";\r\n          let context = canvas.getContext(\"2d\");\r\n          canvas.width = 128;\r\n          canvas.height = 128;\r\n          let img = new Image();\r\n          //这里发布的时候会出现http://localhost:8083/web/dist/static/images/hotspot.jpg\r\n          // img.src = \"www.baidu.com/img/flexible/logo/pc/result.png\";\r\n          //发布用\r\n          img.src = hotspot;\r\n          img.onload = function () {\r\n            context.drawImage(img, 0, 0,128,128);\r\n            let texture = new THREE.Texture(canvas);\r\n            texture.needsUpdate = true;\r\n            texture.minFilter = THREE.LinearFilter;\r\n            var spriteMaterial = new THREE.SpriteMaterial({\r\n              map: texture,\r\n              transparent: false\r\n            });\r\n            var sprite = new THREE.Sprite(spriteMaterial);\r\n            sprite.scale.set(30, 30, 30);\r\n            let rate = 0.8;\r\n            var endV = new THREE.Vector3(\r\n              xAverage * rate,\r\n              yAverage * rate,\r\n              zAverage * rate\r\n            );\r\n            sprite.position.copy(endV);\r\n            scene.add(sprite);\r\n            // dispatch(actions.changeIsHotspot())\r\n          };\r\n\r\n          xPositionArr = [];\r\n          yPositionArr = [];\r\n          zPositionArr = [];\r\n        }\r\n        //移除热点\r\n      } else {\r\n        // debugger\r\n        if (intersects.length > 0) {\r\n          const target = intersects[0];\r\n          //console.log(intersects[0])\r\n          try {\r\n            if (target.object && target.object.type.length > 0) {\r\n              if (target.object.type.toLowerCase() === \"sprite\") {\r\n                if (this.$store.state.test.isDeleteHotSpot) {\r\n                  scene.remove(target.object);\r\n                  this.$store.commit(\"deletedHotSpot\");\r\n                  this.$store.commit(\"hideHotSpot\");\r\n                } else {\r\n                  let location = target.object.position;\r\n                  let panAndTilt = this.calculatePanandTilt(\r\n                    location.x * 1.25,\r\n                    location.y * 1.25,\r\n                    location.z * 1.25\r\n                  );\r\n                  this.$store.commit(\"showJumpHotSpot\");\r\n                  this.$store.commit(\"saveTempLocation\", {\r\n                    location: [\r\n                      location.x * 1.25,\r\n                      location.y * 1.25,\r\n                      location.z * 1.25\r\n                    ],\r\n                    panAndTilt: panAndTilt,\r\n                    ID:\"JumpHotSpot\",\r\n                  });\r\n\r\n                }\r\n              }\r\n            }\r\n          } catch (e) {\r\n            console.log(e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    onPointerDownPointerX= event.clientX\r\n    onPointerDownPointerY = event.clientY\r\n    onPointerDownLon = lon\r\n    onPointerDownLat = lat\r\n  }\r\n\r\n\r\n  const onDocumentMouseMove = (event) => {\r\n    if (isUserInteracting === true) {\r\n      console.log('可以移动')\r\n      lon = (onPointerDownPointerX - event.clientX) * 0.1 + onPointerDownLon;\r\n      lat = (event.clientY - onPointerDownPointerY) * 0.1 + onPointerDownLat;\r\n    }\r\n  }\r\n\r\n  const onDocumentMouseUp = () =>  {\r\n    isUserInteracting = false;\r\n  }\r\n  const changeTag = () => {\r\n    isTag = !isTag\r\n    console.log(isTag)\r\n  }\r\n  return (\r\n    <div className='container'>\r\n      <Button type=\"primary\" onClick={()=>changeTag()}>Button</Button>\r\n      <div id=\"container\" className=\"panoramaContent\"></div>\r\n    </div>\r\n  )\r\n}\r\nexport default Preview","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reportWebVitals.js",[],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\Edit\\index.js",["81"],"import React, { useState } from 'react'\r\nimport { Switch } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  selectIsHotspot,\r\n} from '../reselect'\r\n\r\nimport { actions } from '../reducers'\r\n\r\n\r\nconst Edit = () => {\r\n\r\n  const isHotspot = useSelector(selectIsHotspot())\r\n   const dispatch = useDispatch()\r\n\r\n  const isHotspotChange = () => {\r\n    dispatch(actions.changeIsHotspot())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      标注投放：  <Switch checkedChildren=\"开启\" unCheckedChildren=\"关闭\" checked={isHotspot}  onChange={ ()=> isHotspotChange()} />{isHotspot.toString()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Edit","C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\reducers.js",[],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Demo\\index.js",["82"],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\reducers\\rootReducer.js",[],"C:\\Users\\litz01\\Desktop\\my-project\\react-pc\\vr\\src\\views\\VrViews\\Design\\reselect.js",[],{"ruleId":"83","severity":1,"message":"84","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":17},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"92","line":4,"column":43,"nodeType":"85","messageId":"86","endLine":4,"endColumn":50},{"ruleId":"83","severity":1,"message":"93","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":24},{"ruleId":"83","severity":1,"message":"94","line":11,"column":10,"nodeType":"85","messageId":"86","endLine":11,"endColumn":17},{"ruleId":"83","severity":1,"message":"95","line":38,"column":5,"nodeType":"85","messageId":"86","endLine":38,"endColumn":8},{"ruleId":"83","severity":1,"message":"96","line":66,"column":9,"nodeType":"85","messageId":"86","endLine":66,"endColumn":17},{"ruleId":"83","severity":1,"message":"97","line":67,"column":9,"nodeType":"85","messageId":"86","endLine":67,"endColumn":15},{"ruleId":"83","severity":1,"message":"98","line":71,"column":10,"nodeType":"85","messageId":"86","endLine":71,"endColumn":15},{"ruleId":"83","severity":1,"message":"99","line":71,"column":17,"nodeType":"85","messageId":"86","endLine":71,"endColumn":25},{"ruleId":"83","severity":1,"message":"100","line":72,"column":10,"nodeType":"85","messageId":"86","endLine":72,"endColumn":16},{"ruleId":"83","severity":1,"message":"101","line":72,"column":18,"nodeType":"85","messageId":"86","endLine":72,"endColumn":27},{"ruleId":"83","severity":1,"message":"102","line":73,"column":10,"nodeType":"85","messageId":"86","endLine":73,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":84,"column":6,"nodeType":"105","endLine":84,"endColumn":8,"suggestions":"106"},{"ruleId":"83","severity":1,"message":"107","line":250,"column":10,"nodeType":"85","messageId":"86","endLine":250,"endColumn":26},{"ruleId":"83","severity":1,"message":"108","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":82,"column":6,"nodeType":"105","endLine":82,"endColumn":8,"suggestions":"109"},"no-unused-vars","'VrRouters' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'useEffect' is defined but never used.","'Reducer' is defined but never used.","'useMemo' is defined but never used.","'actions' is defined but never used.","'arr' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'vrData' is assigned a value but never used.","'width' is assigned a value but never used.","'setWidth' is assigned a value but never used.","'height' is assigned a value but never used.","'setHeight' is assigned a value but never used.","'startV' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'animate' and 'init'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'drawJumpHotSpots' is assigned a value but never used.","'useState' is defined but never used.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},"Update the dependencies array to be: [animate, init]",{"range":"117","text":"118"},{"range":"119","text":"118"},[2277,2279],"[animate, init]",[2464,2466]]